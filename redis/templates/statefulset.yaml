{{- $fullName    := include "redis.fullname" . -}}
{{- $configName  := default $fullName .Values.configName -}}
---
apiVersion:                      apps/v1
kind:                            StatefulSet
metadata:
  name:                          {{ $fullName }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
spec:
  serviceName:                   {{ $fullName }}
  replicas:                      {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name:                  init
          image:                 {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          volumeMounts:
            - name:              configmap
              mountPath:         /configmap
              readOnly:          true
            - name:              config
              mountPath:         /config
          command:
            - /bin/sh
            - -c
            - |
              index=$(hostname | grep '\-' | sed 's/.*-//' | tr -d -c 0-9)
              config="master"
              if [ ! -z $index ]; then
                if [ "$index" != "0" ]; then
                  config="slave"
                fi
              fi
              cp /configmap/${config}.conf /config/redis.conf
      containers:
        - name:                  {{ .Chart.Name }}
          image:                 {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy:       {{ .Values.image.pullPolicy }}
          command:
            - redis-server
          args:
            - /config/redis.conf
          ports:
            - containerPort:     {{ .Values.service.port }}
              name:              redis
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name:              config
              mountPath:         /config
            - name:              data
              mountPath:         /data
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 3
            timeoutSeconds:      5
            failureThreshold:    3
            periodSeconds:       10
            successThreshold:    1
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 3
            timeoutSeconds:      5
            failureThreshold:    3
            periodSeconds:       10
            successThreshold:    1
      volumes:

        - name:                  configmap
          configMap:
            name:                {{ $configName }}

        - name:                  config
          persistentVolumeClaim:
            claimName:           config

        - name:                  data
          persistentVolumeClaim:
            claimName:           data

  volumeClaimTemplates:
    - metadata:
        name:                    config
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName:        {{ .Values.configStorage.className }}
        resources:
          requests:
            storage:             {{ .Values.configStorage.size }}

    - metadata:
        name:                    data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName:        {{ .Values.dataStorage.className }}
        resources:
          requests:
            storage:             {{ .Values.dataStorage.size }}
