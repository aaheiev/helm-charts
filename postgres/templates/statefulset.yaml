---
{{- $fullName    := include "postgres.fullname" . -}}
{{- $secretName  := default $fullName .Values.secretName -}}
{{- $configName  := default $fullName .Values.configName -}}
apiVersion:                      apps/v1
kind:                            StatefulSet
metadata:
  name:                          {{ template "postgres.fullname" . }}
  labels:
{{ include "postgres.labels" . | indent 4 }}
spec:
  serviceName:                   postgres
  replicas:                      1
  selector:
    matchLabels:
      app:                       postgres
  template:
    metadata:
      labels:
        app:                     postgres
    spec:
      containers:
        - name:                  postgres
          image:                 "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          envFrom:
            - secretRef:
                name:            {{ $secretName }}
            - configMapRef:
                name:            {{ $configName }}
          ports:
            - containerPort:     {{ .Values.service.port }}
              name:              postgres
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name:              pgdata
              mountPath:         /var/lib/postgresql
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready
                - --dbname=$POSTGRES_DB
                - --username=$POSTGRES_USER
            initialDelaySeconds: 15
            timeoutSeconds:      5
            failureThreshold:    3
            periodSeconds:       10
            successThreshold:    1
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready
                - --dbname=$POSTGRES_DB
                - --username=$POSTGRES_USER
            initialDelaySeconds: 45
            timeoutSeconds:      5
            failureThreshold:    3
            periodSeconds:       10
            successThreshold:    1
      initContainers:
        - name:                  init
          image:                 busybox
          volumeMounts:
            - mountPath:         /var/lib/postgresql
              name:              pgdata
              subPath:           data
          command:
            - /bin/sh
            - -c
            - chown -R 70:70 /var/lib/postgresql
      volumes:
        - name:                  pgdata
          persistentVolumeClaim:
            claimName:           pgdata
  volumeClaimTemplates:

    - metadata:
        name:                    pgdata
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName:        hostpath
        resources:
          requests:
            storage:             512Mi
